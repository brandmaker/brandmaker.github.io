{
  "swagger" : "2.0",
  "info" : {
    "description" : "## Swagger generated Documentation of the WebCache RESTful API ##\n\n### Module **WebCache Core** ###\n\nBrandMaker provides software solutions that automate customer engagement while nurturing prospects in a highly personalized way. \nThe net result? More sales leads that are qualified, increased pipeline activity, and marketing that just works. \n\nThe BrandMaker WebCache modules are the central part of the engagement solution. They solely provide [RESTful APIs](https://en.wikipedia.org/wiki/Representational_state_transfer) \nin order to enable developers to put their own integrations on top of it.\n\nThis documentation consists of two parts:\n\n+ [Module WebCache Core (this file)](/api-doc/?url=/api-core/swagger-ui/swagger.json)\n+ [Module WebCache Engage](/api-doc/?url=/api-engage/swagger-ui/swagger.json)\n\nPlease refer to the proper bundle / module",
    "version" : "1.0.0",
    "title" : "WebCache RESTful API",
    "termsOfService" : "https://www.brandmaker.com/en/imprint",
    "contact" : {
      "name" : "BrandMaker GmbH, Karlsruhe, Germany",
      "url" : "http://brandmaker.com",
      "email" : "info@brandmaker.com"
    },
    "license" : {
      "name" : "Copyright (c) 2020,  BrandMaker GmbH",
      "url" : "http://www.brandmaker.com"
    }
  },
  "host" : "wcdev.brandmaker.com",
  "basePath" : "/services",
  "tags" : [ {
    "name" : "Asset and Media"
  }, {
    "name" : "Authentication"
  }, {
    "name" : "Categories (aka \"Topics\" or \"Themes\""
  }, {
    "name" : "Media Pool Web Hook"
  }, {
    "name" : "SEW SSO Client"
  }, {
    "name" : "Tenant"
  }, {
    "name" : "User"
  }, {
    "name" : "User services"
  }, {
    "name" : "User services - Collections"
  }, {
    "name" : "User services - Groups Management"
  }, {
    "name" : "User services - User Management"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/sewstarter" : {
      "post" : {
        "tags" : [ "SEW SSO Client" ],
        "summary" : "Start the sew via JWT",
        "description" : "This servlet starts the SEW by accepting a signed JSON Web Token (JWT), picking out the payload and registering the user within WebCache<p>&nbsp;<br>Please be aware that the URL is <code><b>https://hostname/sewstarter</b></code> - ommit the <code>/service</code> part as this won't work on the production system!",
        "operationId" : "SewStarter",
        "parameters" : [ {
          "name" : "tid",
          "in" : "query",
          "description" : "Tenant ID",
          "required" : true
        }, {
          "name" : "token",
          "in" : "query",
          "description" : "JWT token",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/ssl" : {
      "post" : {
        "tags" : [ "SEW SSO Client" ],
        "summary" : "Login an SEW user from the portal",
        "description" : "<p>Registers a user from the portal in the SEW / WebCache and logs him in. The structure of the request is like:<p><pre>{\n    \"given_name\": \"name\",\n    \"family_name\": \"nachname\",\n    \"email\": \"email2\",\n    \"locale\": \"de\",\n    \"sub\": \"test.user.2\",\n    \"admin\": false,\n    \"systemid\": \"821-574-160\",\n    \"customerid\": \"una-nho-eie\"\n}</pre> <p>as a plain post body.<p>&nbsp;<br>Please be aware that the URL is <code><b>https://hostname/ssl</b></code> - ommit the <code>/service</code> part as this won't work on the production system!<p>The <b>response</b> contains a status and in case of success the according API tokens, uder and tenant data:<pre>\n{\n    \"token\": \"N2JjYTRkYmM2ZjI2ZTAyNjAxNjQwYjhmMGM3MzcxYmMyM2RhM2I0MkAxMTU0OTM3MzU3MDU4OUBxaTNyZVpFZFR3UGZGZWMwaDBiQ2JQTFU1UmErR1h0NQ==\",\n    \"refreshtoken\": \"ZTFlNjdjYjAwNmFlY2I0ZDQzNjU3NTI3ODU1ZjE2ZTVmN2U1NjBlMkAxMTU1MDIzMjQxNTQyOEBISzgvajNkdFd5WTl4U3paTDRNK2JtRzVSRHRaYTczUQ==\",\n    \"user\": {\n        \"firstName\": \"Axel\",\n        \"lastName\": \"Amthor\",\n        \"email\": \"axel.amthor@brandmaker.com\",\n        \"tenantId\": \"1\",\n        \"loginName\": \"axel.amthor@brandmaker.com\",\n        \"lang\": \"en\",\n        \"tz\": \"Europe/Berlin\",\n        \"mobilefone\": \"01725101776\",\n        \"sew.subscription.mail\": true,\n        \"sew.subscription.allopens\": true,\n        \"sew.subscription.push\": true,\n        \"uuid\": \"u_1unsthf\",\n        \"isadmin\": true,\n        \"noedit\": true\n        },\n    \"tenant\": {\n        \"name\": \"◄ Test Account ►\",\n        \"description\": \"Digital Marketing Center Test Account\",\n        \"tz\": \"Europe/Berlin\",\n        \"logourl\": \"https://dmc.brandmaker.com/admin/img/bmlogo211x61.png\",\n        \"accountid\": 1,\n        \"accountaid\": \"Test\",\n        \"webcollectorid\": \"PACE_TEST\",\n        \"twofactor\": \"false\",\n        \"mpreader\": \"viewer\",\n        \"ceareader\": \"viewer\",\n        \"webcacheurl\": \"https://wcdev.brandmaker.com/\",\n        \"cearecipientlimit\": 3,\n        \"portal_system\": \"821-574-160\",\n        \"portal_tenant\": \"una-nho-eie\",\n        \"app\": {\n            \"splashscreen\": {\n                \"disable\": false,\n                \"serviceMobile\": \"/etc/webcache/tenants/1/templates/app/splashscreen/mobile/default_mobile.png\",\n                \"serviceTablet\": \"/etc/webcache/tenants/1/templates/app/splashscreen/tablet/default_tablet.png\"\n                },\n            \"scheme\": {\n                \"backgroundcolor\": \"#EFEFEF\",\n                \"backgroundcolorCell\": \"#FFFFFF\",\n                \"backgroundcolorCellSelected\": \"#242326\",\n                \"slidercolor\": \"#C0C0C0\",\n                \"slidercolorselected\": \"#F19100\",\n                \"fontcolor\": \"#242326\",\n                \"fontcolorSelected\": \"#FFFFFF\",\n                \"detailfontcolor\": \"#242326\",\n                \"detailfontcolorSelected\": \"#FFFFFF\",\n                \"foldercolor\": \"#F19100\",\n                \"foldercolorSelected\": \"#FFFFFF\",\n                \"navbarbackgroundcolor\": \"#F8F8F8\",\n                \"navbarcolor\": \"#F19100\",\n                \"navbarcolorInactiv\": \"#EFEFEF\",\n                \"navbarcolorSelected\": \"#929292\",\n                \"tabbarcolor\": \"#929292\",\n                \"tabbarcolorInactiv\": \"#EFEFEF\",\n                \"tabbarcolorSelected\": \"#F19100\",\n                \"tabbarbackgroundcolor\": \"#F8F8F8\",\n                \"badgecolor\": \"#F19100\",\n                \"navbarcolorBackgroundcolorEdit\": \"#242326\",\n                \"navbarcolorEditFontcolor\": \"#FFFFFF\",\n                \"messagecolor\": \"#FFFFFF\",\n                \"messagebackgroundcolor\": \"#B3B5B5\",\n                \"infoboxbackgroundcolor\": \"#F9F9F9\"\n                },\n            \"foldericon\": {\"disable\": false},\n            \"logo\": {\"disable\": false}\n            }\n        }\n    }</pre>",
        "operationId" : "SewStarter",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SewSimpleLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/asset/{assetidentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Get entire asset as zip.Includes Thumbnail, meta data and all rendered pages with SVG, thumb and hires PNG.",
        "description" : "",
        "operationId" : "getAssetDataZipped",
        "produces" : [ "application/zip" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "description" : "assetidentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/asset/{assetidentifier}/stripped" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Get entire asset as zip, but stripped from certain entries, thus less data size. The high reslution PNG images per each page are ommited, only svg and thumbs are included. This reduces data size by almost 60%",
        "description" : "",
        "operationId" : "getAssetDataStripped",
        "produces" : [ "application/zip" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "description" : "assetidentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/assets/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Get a list of all asset id's which are valid (i.e. do have meta data) of this tenant (!)",
        "description" : "<p>Produces a JSON array of IDs of all assets of this tenant, whicht have a metadata node. This is mainly for sync purposes, it does not provide any other data - and should not!<p><b>This endpoint requires administrator rights !!</b>",
        "operationId" : "getAllValidAssetIds",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "description" : "tenantIdentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/auth" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Login and retrieve a valid token",
        "description" : "  <p>Authenticate an App User and provide a token and a refresh token for a 3<sup>rd</sup> party application.\t   <p>&nbsp;\t   <p>Login Data:\n\t   <pre>\n\t  \t{\n        \t\"username\":\"(emailadress)\",\n        \t\"password\":\"(cleartextpassword)\",\n        \t\"tenant\":\"(tenantname)\",\n        \t\"installid\":\"(app installation ID)\"\n\t   \t}\n\t   </pre>\n      <p>&nbsp;\t   <p>Response (successfull login):\n\t   <pre>\n{\r\n    \"token\": \"N2JjYTRkYmM2ZjI2ZTAyNjAxNjQwYjhmMGM3MzcxYmMyM2RhM2I0MkAxMTU0OTM3MzU3MDU4OUBxaTNyZVpFZFR3UGZGZWMwaDBiQ2JQTFU1UmErR1h0NQ==\",\r\n    \"refreshtoken\": \"ZTFlNjdjYjAwNmFlY2I0ZDQzNjU3NTI3ODU1ZjE2ZTVmN2U1NjBlMkAxMTU1MDIzMjQxNTQyOEBISzgvajNkdFd5WTl4U3paTDRNK2JtRzVSRHRaYTczUQ==\",\r\n    \"user\": {\r\n        \"firstName\": \"Axel\",\r\n        \"lastName\": \"Amthor\",\r\n        \"email\": \"axel.amthor@brandmaker.com\",\r\n        \"tenantId\": \"1\",\r\n        \"loginName\": \"axel.amthor@brandmaker.com\",\r\n        \"lang\": \"en\",\r\n        \"tz\": \"Europe/Berlin\",\r\n        \"mobilefone\": \"01725101776\",\r\n        \"sew.subscription.mail\": true,\r\n        \"sew.subscription.allopens\": true,\r\n        \"sew.subscription.push\": true,\r\n        \"uuid\": \"u_1unsthf\",\r\n        \"isadmin\": true,\r\n        \"noedit\": true\r\n        },\r\n    \"tenant\": {\r\n        \"name\": \"◄ Test Account ►\",\r\n        \"description\": \"Digital Marketing Center Test Account\",\r\n        \"tz\": \"Europe/Berlin\",\r\n        \"logourl\": \"https://dmc.brandmaker.com/admin/img/bmlogo211x61.png\",\r\n        \"accountid\": 1,\r\n        \"accountaid\": \"Test\",\r\n        \"webcollectorid\": \"PACE_TEST\",\r\n        \"twofactor\": \"false\",\r\n        \"mpreader\": \"viewer\",\r\n        \"ceareader\": \"viewer\",\r\n        \"webcacheurl\": \"https://wcdev.brandmaker.com/\",\r\n        \"cearecipientlimit\": 3,\r\n        \"portal_system\": \"821-574-160\",\r\n        \"portal_tenant\": \"una-nho-eie\",\r\n        \"app\": {\r\n            \"splashscreen\": {\r\n                \"disable\": false,\r\n                \"serviceMobile\": \"/etc/webcache/tenants/1/templates/app/splashscreen/mobile/default_mobile.png\",\r\n                \"serviceTablet\": \"/etc/webcache/tenants/1/templates/app/splashscreen/tablet/default_tablet.png\"\r\n                },\r\n            \"scheme\": {\r\n                \"backgroundcolor\": \"#EFEFEF\",\r\n                \"backgroundcolorCell\": \"#FFFFFF\",\r\n                \"backgroundcolorCellSelected\": \"#242326\",\r\n                \"slidercolor\": \"#C0C0C0\",\r\n                \"slidercolorselected\": \"#F19100\",\r\n                \"fontcolor\": \"#242326\",\r\n                \"fontcolorSelected\": \"#FFFFFF\",\r\n                \"detailfontcolor\": \"#242326\",\r\n                \"detailfontcolorSelected\": \"#FFFFFF\",\r\n                \"foldercolor\": \"#F19100\",\r\n                \"foldercolorSelected\": \"#FFFFFF\",\r\n                \"navbarbackgroundcolor\": \"#F8F8F8\",\r\n                \"navbarcolor\": \"#F19100\",\r\n                \"navbarcolorInactiv\": \"#EFEFEF\",\r\n                \"navbarcolorSelected\": \"#929292\",\r\n                \"tabbarcolor\": \"#929292\",\r\n                \"tabbarcolorInactiv\": \"#EFEFEF\",\r\n                \"tabbarcolorSelected\": \"#F19100\",\r\n                \"tabbarbackgroundcolor\": \"#F8F8F8\",\r\n                \"badgecolor\": \"#F19100\",\r\n                \"navbarcolorBackgroundcolorEdit\": \"#242326\",\r\n                \"navbarcolorEditFontcolor\": \"#FFFFFF\",\r\n                \"messagecolor\": \"#FFFFFF\",\r\n                \"messagebackgroundcolor\": \"#B3B5B5\",\r\n                \"infoboxbackgroundcolor\": \"#F9F9F9\"\r\n                },\r\n            \"foldericon\": {\"disable\": false},\r\n            \"logo\": {\"disable\": false}\r\n            }\r\n        }\r\n    }\t   </pre><p>&nbsp;<p>The login provides a refresh token and an API key (token). The token is usd within the header in order to authorize a request.<p>&nbsp;<p>Every request against any WebCache API endpoint must contain a valid <code>Authorization</code> header with a method of <code>WCT</code> and the token:<pre>\tAuthorization: WCT abc...234ky</pre><p>&nbsp;<p>The http response contains a header named <code>wct_token</code> which contains a new short lived token to be used in a subsequent request.<p>If the token is expired, the refresh token can be used to retrieve a new valid token.",
        "operationId" : "authenticate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "credentials",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/collections" : {
      "get" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Get a users list of stored collections",
        "description" : "<p>Get a users list of stored collections.\r\n <p>This will return an array of objects, containing name and ID of the collectionss:\r\n<pre>\r\n[\r\n \t{\r\n\t\t\t\"ID\": \"12345...\",\r\n\t\t\t\"name\": \"abc ...\"\r\n\t\t\t\"assetcount\": 45\r\n\t\t},\r\n\t\t...\r\n]</pre>\r\n",
        "operationId" : "getCollections",
        "produces" : [ "application/json;charset=utf-8" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collections node not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/collections/add/{collectionid}" : {
      "post" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Add assets to this collection",
        "description" : "<p>Add assets to the collection.\r\n<p>This will accept the following data:\r\n<pre>\r\n{ \"assets\": [\r\n\t\t\"id1\",\r\n\t\t\"id2\",\r\n\t\t...\r\n\t  ]\r\n}\r\n</pre>\r\n<p><br>",
        "operationId" : "addAssets",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "collectionid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "valueMap",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Asset added"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collections node not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/collections/delete/{collectionid}" : {
      "delete" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Deletes this collection.",
        "description" : "<p>Deletes this collection..\r\n",
        "operationId" : "deleteCollection",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "collectionid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collection not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/collections/list/{collectionid}" : {
      "get" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Gets all assets of the collection with the given ID.",
        "description" : "<p>Gets all assets of this collection.\r\n <p>This will return an array of objects, containing the asset meta data of the assets in this collection:\r\n<pre>\r\n\"assets\": [ (asset meta data), (asset metadata, ... ]\r\n<p><br><p>The array will only contain assets, that currently exist. Assets which have been deleted meanwhile, will be omitted!",
        "operationId" : "getCollection",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "collectionid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collection not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/collections/remove/{collectionid}" : {
      "delete" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Remove these assets from this collection.",
        "description" : "<p>Remove these assets from this collection.\r\n<p>This will accept the following data:\r\n<pre>\r\n{ \"assets\": [\r\n\t\t\"id1\",\r\n\t\t\"id2\",\r\n\t\t...\r\n\t  ]\r\n}\r\n</pre>\r\n<p><br>",
        "operationId" : "removeAssetsFromCollection",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "collectionid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "valueMap",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collection not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/collections/save/{collectionid}" : {
      "put" : {
        "tags" : [ "User services - Collections" ],
        "summary" : "Store a collection",
        "description" : "<p>Store a collection.\r\n <p>This will accept the following data:\r\n<pre>\r\n{\r\n\t\t\"name\":\"name of the collection...\",\r\n\t\t\"assets\": [\r\n\t\t\t\"id1\",\r\n\t\t\t\"id2\",\r\n\t\t\t...\r\n\t\t]\r\n}\r\n</pre>\r\n<p><br><p>If the ID is '*', a new collection will be created, otherwise the collection with that ID gets overwritten. It will return the collectcions data like in GET .../collections",
        "operationId" : "storeCollection",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "collectionid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+|\\*"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "valueMap",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Collection stored"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Collections node not found"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/converter/{assetidentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Kick off the asset converter task again on an existing asset",
        "description" : "",
        "operationId" : "startConverter",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/groups/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Get a list of groups of a tenant",
        "description" : "",
        "operationId" : "getGroups",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Create a new group",
        "description" : "<p>Create a new group in WebCache for a tenant:<p>Structure: <pre>{\n \t\"members\": [\"u_1nsthf\", \"u_blafasel17\"],\n \t\"groupname\": \"Anonymer Zugriff\",\n \t\"roles\": [\"anonymous\"],\n \t\"topics\": [\"55\", \"56\", \"1283\", \"1284\", \"1285\", \"1303\", \"1321\", \"1687\" ],\n }</pre>",
        "operationId" : "createGroup",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/groups/{tenantIdentifier}/{groupIdentifier}" : {
      "get" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Get group data",
        "description" : "",
        "operationId" : "getGroup",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Create a new group",
        "description" : "<p>Create a new group in WebCache for a tenant:<p>Structure: <pre>{\n \t\"members\": [\"u_1nsthf\", \"u_blafasel17\"],\n \t\"groupname\": \"Anonymer Zugriff\",\n \t\"roles\": [\"anonymous\"],\n \t\"topics\": [\"55\", \"56\", \"1283\", \"1284\", \"1285\", \"1303\", \"1321\", \"1687\" ],\n }</pre>",
        "operationId" : "updateGroup",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Delete a group from WebCache. The according users in this group will lose the role assigned to that group and their access rights might change dramatically. This operation is irreversible.",
        "description" : "",
        "operationId" : "deleteGroup",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/groups/{tenantIdentifier}/{groupIdentifier}/members" : {
      "put" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Assign a list of users to a single group",
        "description" : "<p>Assign a list of users to a single group in WebCache for a tenant:<p>Structure: <pre>[\"u_1nsthf\", \"u_blafasel17\", ....]</pre>",
        "operationId" : "assignUsersToGroup",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "User services - Groups Management" ],
        "summary" : "Removes a list of users from a single group",
        "description" : "<p>Remove a list of users from a single group in WebCache for a tenant:<p>Structure: <pre>[\"u_1nsthf\", \"u_blafasel17\", ....]</pre>The according users in this group will lose the role assigned to that group and their access rights might change dramatically.",
        "operationId" : "removeUsersFromGroup",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/login" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Login and retrieve a valid token",
        "description" : "  <p>See 'auth', just for backwards comaptibility!",
        "operationId" : "login",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "credentials",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "deprecated" : true
      }
    },
    "/v1/media/{tenantIdentifier}/{mediaIdentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Get an asset by searching for its MediaPool Media ID. Requires DMC tenant ID, as Media Pool IDs are only unique per tenant",
        "description" : "",
        "operationId" : "getMetadataByMediaId",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "mediaIdentifier",
          "in" : "path",
          "description" : "mediaIdentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        }, {
          "name" : "tenantIdentifier",
          "in" : "path",
          "description" : "tenantIdentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/meta/{assetidentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Get meta data of an asset by its webcache ID",
        "description" : "",
        "operationId" : "getMetadata",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/mpsync" : {
      "post" : {
        "tags" : [ "Media Pool Web Hook" ],
        "summary" : "Accept Media Pool Web Hook Request",
        "description" : "<p>Web Hook which retrieves events generated by Media Pool in order to sync assets between Media Pool and WebCache.\r\n<p>This service is not doing anything else than making formal checks on the request and then queue the request to the importer queue!\r\n<p>As this API does not require any login, it is crucial to sign the request with the private signature of the Media Pool instance!<p>Unsigned request or requests w/o a valid signature are discarded and answered with a 404 - not found state.<p>The event data structure:<pre>{\r\n\t\"data\":\"{\\\"customerid\\\": \\\"una-nho-eie\\\",\\\"systemid\\\": \\\"821-574-160\\\",\\\"baseurl\\\": \\\"https://is-dev2.brandmaker.com/\\\",\\\"events\\\": [ { \\\"assetid\\\": \\\"20167\\\", \\\"eventdata\\\": { \\\"channelid\\\": \\\"PUBLIC_LINKS\\\", \\\"startdate\\\": null, \\\"enddate\\\": null, \\\"downloadscheme\\\": 22 }, \\\"event\\\": \\\"PUBLISHED\\\", \\\"eventtime\\\": 1552667068052 }]}\",\r\n\t\"signature\": \"sdlk.................fhsfgjhg\"\r\n}\r\n</pre>",
        "operationId" : "mpWebHook",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "requestBody",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "{\r\n\t\"data\":\"{\\\"customerid\\\": \\\"una-nho-eie\\\",\\\"systemid\\\": \\\"821-574-160\\\",\\\"baseurl\\\": \\\"https://is-dev2.brandmaker.com/\\\",\\\"events\\\": [ { \\\"assetid\\\": \\\"20167\\\", \\\"eventdata\\\": { \\\"channelid\\\": \\\"PUBLIC_LINKS\\\", \\\"startdate\\\": null, \\\"enddate\\\": null, \\\"downloadscheme\\\": 22 }, \\\"event\\\": \\\"PUBLISHED\\\", \\\"eventtime\\\": 1552667068052 }]}\",\r\n\t\"signature\": \"sdlk.................fhsfgjhg\"\r\n}\r\n"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"data\":\"{\\\"customerid\\\": \\\"una-nho-eie\\\",\\\"systemid\\\": \\\"821-574-160\\\",\\\"baseurl\\\": \\\"https://is-dev2.brandmaker.com/\\\",\\\"events\\\": [ { \\\"assetid\\\": \\\"20167\\\", \\\"eventdata\\\": { \\\"channelid\\\": \\\"PUBLIC_LINKS\\\", \\\"startdate\\\": null, \\\"enddate\\\": null, \\\"downloadscheme\\\": 22 }, \\\"event\\\": \\\"PUBLISHED\\\", \\\"eventtime\\\": 1552667068052 }]}\",\r\n\t\"signature\": \"sdlk.................fhsfgjhg\"\r\n}"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/referenced/{assetidentifier}" : {
      "get" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Check for any references to this asset. This will return just { \"references\": true|false }",
        "description" : "",
        "operationId" : "checkForReferences",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/refresh" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Retrieve new token with refresh token",
        "description" : "<p>The refresh token needs to be provided as a JSON string:<br><pre>{ \n\t\t\"refreshtoken\":\"xyz...\", \n} \n</pre><p>A refresh token is provided in the login (auth) response and needs to be stored persitantly. If no refresh token is available or it has expired (6 month), a new login has to be requested.<p>&nbsp;<p>The login provides a refresh token and an API key (token). The token is usd within the header in order to authorize a request.<p>&nbsp;<p>Every request against any WebCache API endpoint must contain a valid <code>Authorization</code> header with a method of <code>WCT</code> and the token:<pre>\tAuthorization: WCT abc...234ky</pre>",
        "operationId" : "refresh",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "refreshtoken",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/simplesearch/{tenantIdentifier}" : {
      "post" : {
        "tags" : [ "Asset and Media" ],
        "summary" : "Simple search interface to search a term within content and selected meta data in the entire repo of this tenant (!)",
        "description" : "Query Object:<br><pre>{ \n\t\t\"term\":\"BrandMaker\", \n\t\t\"resulttype\":\"long|short\",\n     \"filter\":\"all|private|corporate\"\n} \n</pre><p>Where 'long' means: all available meta data except pages vector and 'short' means only asset ID, Name, Descriptions and Thumb.<p>The optional <code>filter</code> property limits to either private or corporate assets. \"all\" is the default.",
        "operationId" : "simpleSearch",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "searchTermString",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tenantIdentifier",
          "in" : "path",
          "description" : "tenantIdentifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/tenant" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Get a list of all tenants currently defined",
        "description" : "<p>Retrieve a list of all tenants in the system.",
        "operationId" : "getTenants",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tenant" ],
        "summary" : "Create a tenant in WebCache",
        "description" : "<p>Data structure:<p><pre>{\n    \"ctarecipient\": \"dmcadmins@brandmaker.com\",\n    \"timezone\": \"Europe/Berlin\",\n    \"portal_key\": \" ..... \",\n    \"description\": \"Volkswagen Financial Services AG DMC\",\n    \"WebCacheUrl\": \"https://webcache.brandmaker.com/\",\n    \"mail.user\": \"aamthor\",\n    \"ceareader\": \"viewer\",\n    \"logourl\": \"https://webcache.brandmaker.com//libs/sling/webcache/img/bmlogo211x61.png\",\n    \"twofactor\": \"false\",\n    \"dbpwd\": \"....\",\n    \"dmcaid\": \"vwfsag\",\n    \"database\": \"jdbc:mysql://dbsrv.advertzoom.de:3306/DBVWFSAG\",\n    \"portal_system\": \"Optional[084-655-805]\",\n    \"mail.pwd\": \"....\",\n    \"mail.host\": \"dmc.brandmaker.com\",\n    \"portal_tenant\": \"Optional[deo-hhk-hda]\",\n    \"mail.auth\": \"PLAIN\",\n    \"webcollectorid\": \"VWFSAG_CEC\",\n    \"identifier\": \"151\",\n    \"dmcid\": 151,\n    \"cearecipientlimit\": 3,\n    \"mail.port\": \"25\",\n    \"name\": \"Volkswagen Financial Services AG\",\n    \"mpreader\": \"viewer\",\n    \"dbuid\": \"azwcappusr\"\n}</pre>",
        "operationId" : "createTenant",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "tenantInfo",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/tenant/registerapp/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Get all registered client Apps",
        "description" : "<p>\"Get all registered client Apps<p>The service provides as a json structure:<p><pre>\n\t\t{\n\t\t\t\"client_id\": (the client ID as a string),\n\t\t\t\"client_secret\": (the client secret. this should never be exposed!),\n\t\t\t\"auth_url\": (authentication URL),\n\t\t\t\"token_url\": (token exchange url),\n\t\t\t\"scopes\": (list of valid scopes)\n\t\t}</pre>\n",
        "operationId" : "getClientApps",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/tenant/registerapp/{tenantIdentifier}/{appid}" : {
      "post" : {
        "tags" : [ "Tenant" ],
        "summary" : "Register a client Application for oAuth2 based login to WebCache",
        "description" : "<p>Register a client Application for oAuth2 based login to WebCache.<p>There must be a unique App ID like \"salesforce\" or \"zapier\". This ID must consist of letters, digits and the _ solely!<p>The service provides as a json structure:<p><pre>\n\t\t{\n\t\t\t\"client_id\": (the client ID as a string),\n\t\t\t\"client_secret\": (the client secret. this should never be exposed!),\n\t\t\t\"auth_url\": (authentication URL),\n\t\t\t\"token_url\": (token exchange url),\n\t\t\t\"scopes\": (list of valid scopes)\n\t\t}</pre>\n<p><br>If a client with this ID exists: values are overwritten by new ones and thus invalidating all existing integrations!",
        "operationId" : "registerClientApp",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        }, {
          "name" : "appid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tenant" ],
        "summary" : "Delete a registered client Application for oAuth2 based login to WebCache",
        "description" : "<p>Delete a registered client Application.",
        "operationId" : "deleteClientApp",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+"
        }, {
          "name" : "appid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/tenant/{customerid}/{systemid}" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Get tenant data by providing customer and system ID from portal",
        "description" : "<p>Entire Meta Data for a given tenant:<p><pre>{\n  \"identifier\": \"1\",\n  \"name\": \"◄ Test Account ►\",\n  \"description\": \"Digital Marketing Center Test Account\",\n  \"timezone\": \"Europe/Berlin\",\n  \"logourl\": \"https://wcdev.brandmaker.com//libs/sling/webcache/img/bmlogo211x61.png\",\n  \"dmcaid\": \"Test\",\n  \"dmcid\": 1,\n  \"webcollectorid\": \"PACE_TEST\",\n  \"twofactor\": \"false\",\n  \"webcacheurl\": \"https://wcdev.brandmaker.com/\",\n  \"mpreader\": \"viewer\",\n  \"ceareader\": \"viewer\",\n  \"portal_system\": \"821-574-160\",\n  \"portal_tenant\": \"una-nho-eie\",\n  \"cearecipientlimit\": 3\n}</pre>\n\n",
        "operationId" : "getTenantbyCustomerAndSystemId",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "customerid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/tenant/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Get meta data for the given tenant ID",
        "description" : "<p>Entire Meta Data for a given tenant:<p><pre>{\n  \"identifier\": \"1\",\n  \"name\": \"◄ Test Account ►\",\n  \"description\": \"Digital Marketing Center Test Account\",\n  \"timezone\": \"Europe/Berlin\",\n  \"logourl\": \"https://wcdev.brandmaker.com//libs/sling/webcache/img/bmlogo211x61.png\",\n  \"dmcaid\": \"Test\",\n  \"dmcid\": 1,\n  \"webcollectorid\": \"PACE_TEST\",\n  \"twofactor\": \"false\",\n  \"webcacheurl\": \"https://wcdev.brandmaker.com/\",\n  \"mpreader\": \"viewer\",\n  \"ceareader\": \"viewer\",\n  \"portal_system\": \"821-574-160\",\n  \"portal_tenant\": \"una-nho-eie\",\n  \"cearecipientlimit\": 3\n}</pre>\n\n",
        "operationId" : "getTenant",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Tenant" ],
        "summary" : "Modify an existing tenant in WebCache",
        "description" : "<p>Data structure:<p><pre>{\n    \"ctarecipient\": \"dmcadmins@brandmaker.com\",\n    \"timezone\": \"Europe/Berlin\",\n    \"portal_key\": \" ..... \",\n    \"description\": \"Volkswagen Financial Services AG DMC\",\n    \"WebCacheUrl\": \"https://webcache.brandmaker.com/\",\n    \"mail.user\": \"aamthor\",\n    \"ceareader\": \"viewer\",\n    \"logourl\": \"https://webcache.brandmaker.com//libs/sling/webcache/img/bmlogo211x61.png\",\n    \"twofactor\": \"false\",\n    \"dbpwd\": \"....\",\n    \"dmcaid\": \"vwfsag\",\n    \"database\": \"jdbc:mysql://dbsrv.advertzoom.de:3306/DBVWFSAG\",\n    \"portal_system\": \"Optional[084-655-805]\",\n    \"mail.pwd\": \"....\",\n    \"mail.host\": \"dmc.brandmaker.com\",\n    \"portal_tenant\": \"Optional[deo-hhk-hda]\",\n    \"mail.auth\": \"PLAIN\",\n    \"webcollectorid\": \"VWFSAG_CEC\",\n    \"identifier\": \"151\",\n    \"dmcid\": 151,\n    \"cearecipientlimit\": 3,\n    \"mail.port\": \"25\",\n    \"name\": \"Volkswagen Financial Services AG\",\n    \"mpreader\": \"viewer\",\n    \"dbuid\": \"azwcappusr\"\n}</pre>",
        "operationId" : "updateTenant",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "tenantInfo",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tenant" ],
        "summary" : "Delete an existing tenant in WebCache",
        "description" : "The tenant will be removed from the WebCache. This will not delete any assets of the tenant, although this renders the existing assets inaccessible at all!",
        "operationId" : "deleteTenant",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "summary" : "Retrieve entire category tree",
        "description" : "<p>Retrieve the entire category tree (aka themes tree). This may produce a large amount of data and it may be applicable to only retrieve level by level.Please refer to the other methods / endpoints in this chapter. The result may also contain icon images for each category tree node as data url in order to render this in capable clients immediately. The size of these images may not ba applicable, as this is user generated content. You may omit the images entirely by setting the parameter \"condensed\" to \"true\"",
        "operationId" : "getTopics",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "lang",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "condensed",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "createTopic",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/actions/import" : {
      "post" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "importTopics",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/actions/merge" : {
      "put" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "mergeTopics",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/actions/navigate" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "summary" : "Retrieve the path for a (unique) node id in the category tree",
        "description" : "<p>Retrieve the path for a given category id.",
        "operationId" : "getTopicPath",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "node",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/actions/reimport" : {
      "post" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "reimportTopics",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicIdentifier}" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "getTopic",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "lang",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "createTopic",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "updateTopic",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "deleteTopic",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicIdentifier}/assets" : {
      "put" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "assignAssets",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicIdentifier}/assets/actions/assign" : {
      "put" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "assignAsset",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicIdentifier}/icon" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "getIcon",
        "produces" : [ "text/plain;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicId}/assets" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "summary" : "Retrieve all assets on the level of the given category path",
        "description" : "<p>Retrieve the entire meta data of all assets residing exactly on this level of the category node. The method is not recursive, allthough, expect a large amount of data here.<p><code>topicId</code> is the id of this node",
        "operationId" : "getAssignedAssetsById",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-]+"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicId}/simpleassets" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "summary" : "Retrieve all assets on the level of the given category path",
        "description" : "<p>Retrieve the entire meta data of all assets residing exactly on this level of the category node. The method is not recursive, allthough, expect a large amount of data here.<p><code>topicId</code> is the id of this node",
        "operationId" : "getAssignedAssetsByIdSimple",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-]+"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/topics/{tenantIdentifier}/{topicPath}/assets" : {
      "get" : {
        "tags" : [ "Categories (aka \"Topics\" or \"Themes\"" ],
        "operationId" : "getAssignedAssets",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9_\\-/]+"
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/v1/user" : {
      "get" : {
        "tags" : [ "User services" ],
        "summary" : "Get user data",
        "description" : "<p>Get the logged in user data \r\n",
        "operationId" : "getUser",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "User services" ],
        "summary" : "Updates users data",
        "description" : "<p>The meta data of the currently logged in user are updated according to theJSON provided.<p><pre>\r\n {\r\n    \"some attribute\":\"some value\",\r\n    ...\r\n    \"password\":\"clear text password\",\r\n }\r\n </pre>\r\n<p>for Attributes please refer to sling explorer <code>/home/users/<tenantid>/<prefix>/u_xxxxx</code> ff",
        "operationId" : "updateUser",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User Data",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/user/mru" : {
      "get" : {
        "tags" : [ "User services" ],
        "summary" : "Get users MRU list of assets",
        "description" : "<p>Get the logged in users MRU (<u>M</u>ost <u>R</u>ecently <u>U</u>sed) list sorted descending (newest first)\r\n <p>The service returns all assets in the MRU list with a timestamp in msecs since the epoche as JSON array.\r\n <p>Returns: 200 OK on success, 401 if the user is not logged in<p>&nbsp;<p>This refers only to <b>users</b>, not to contacts. The list of seen documents of a contact is maintained automatically by request filters within WebCache.",
        "operationId" : "getUserMRU",
        "produces" : [ "application/json;charset=utf-8" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "User services" ],
        "summary" : "Clear users MRU list",
        "description" : "<p>Clear users MRU list.\r\n <p>The entire list is discarded\r\n <p>Returns: 200 OK on success, 401 if the user is not logged in.<p>&nbsp;<p>This refers only to <b>users</b>, not to contacts. The list of seen documents of a contact is maintained automatically by request filters within WebCache.",
        "operationId" : "clearUserMRU",
        "produces" : [ "application/json;charset=utf-8" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/user/mru/{assetidentifier}" : {
      "put" : {
        "tags" : [ "User services" ],
        "summary" : "Add an asset to the users MRU list",
        "description" : "<p>Add the given asset ID to the logged in users MRU list.\r\n This therefor must be protected at least by \"READER\" group!\r\n <p>Given asset ID will be added to the users MRU list with current time or updated with this timestamp.\r\n <p>List may not contain more than 25 entries, oldest entry will be discarded if a new one is added\r\n <p>Returns: 200 OK on success, 404 if the asset ID is not found or invalid, 401 if the user is not logged in<p>&nbsp;<p>This refers only to <b>users</b>, not to contacts. The list of seen documents of a contact is maintained automatically by request filters within WebCache.",
        "operationId" : "addAssetToUserMRU",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "assetidentifier",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]+_[0-9]+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/user/pin/request" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Request a two factor SMS PIN",
        "description" : "<p>Request a two factor SMS PIN.\r\n",
        "operationId" : "requestPin",
        "produces" : [ "application/json;charset=utf-8" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/user/pin/verify/{pin}" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Verify a PIN",
        "description" : "<p>Verify a given PIN.",
        "operationId" : "verifyPin",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "pin",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-zA-Z0-9]{5,5}"
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid PIN"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized or invalid token"
          },
          "404" : {
            "description" : "Invalid PIN"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/user/pwdreminder" : {
      "post" : {
        "tags" : [ "User services" ],
        "summary" : "Send a new password via E-Mail to the user",
        "description" : "<p>Send a password reminder to the given user. The user is defined by\r\n email and tenant name. Both must be present:\r\n <pre>\r\n {\r\n \t\t\"email\":\"(given email address)\",\r\n \t\t\"tenant\":\"name of tenant\"\r\n }\r\n </pre>\r\n\r\n the service will respond with 202 - accepted status or 400 - bad request status. In case of 202, an attempt to send a\r\n password email to the given address was made. This does not necessarily mean, that this mail reaches this recipient.",
        "operationId" : "sendPwdReminder",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User Data",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/users/{tenantIdentifier}" : {
      "get" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Get a list of users from a tenant",
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Create new user",
        "description" : "<p>Data structure:<p><pre>{\n\t\"sfdc18id\": \"\",\n\t\"mobilefone\": \"\",\n\t\"loginname\": \"yvonne.ensslin@brandmaker.com\",\n\t\"firstname\": \"Yvonne\",\n\t\"lastname\": \"Ensslin\",\n\t\"email\": \"yvonne.ensslin@brandmaker.com\",\n\t\"password\": \"\",\n\t\"tz\": \"Europe\\/Berlin\",\n\t\"lang\": \"en\",\n\t\"disabled\": \"false\"\n}</pre>",
        "operationId" : "createUser",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/users/{tenantIdentifier}/groups" : {
      "get" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Get users with their full group membership",
        "description" : "",
        "operationId" : "getUsersWithGroups",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/users/{tenantIdentifier}/invalidatetokens" : {
      "delete" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Invaidate all tokens of given user, including refresh tokns",
        "description" : "",
        "operationId" : "invalidateUserTokens",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/users/{tenantIdentifier}/{userIdentifier}" : {
      "get" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Get user data",
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Modify existing user",
        "description" : "<p>Data structure:<p><pre>{\n\t\"sfdc18id\": \"\",\n\t\"mobilefone\": \"\",\n\t\"loginname\": \"yvonne.ensslin@brandmaker.com\",\n\t\"firstname\": \"Yvonne\",\n\t\"lastname\": \"Ensslin\",\n\t\"email\": \"yvonne.ensslin@brandmaker.com\",\n\t\"password\": \"\",\n\t\"tz\": \"Europe\\/Berlin\",\n\t\"lang\": \"en\",\n\t\"disabled\": \"false\"\n}</pre>",
        "operationId" : "updateUser",
        "consumes" : [ "application/json;charset=utf-8" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "delete existing user",
        "description" : "This will delete the user and all of the users privately stored assets. This operation is irreversible.",
        "operationId" : "deleteUser",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/v1/users/{tenantIdentifier}/{userIdentifier}/membership" : {
      "get" : {
        "tags" : [ "User services - User Management" ],
        "summary" : "Get users group membership",
        "description" : "",
        "operationId" : "getUserMembership",
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tenantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Authorization" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "Enumeration" : {
      "type" : "object"
    },
    "Iterator" : {
      "type" : "object"
    },
    "IteratorString" : {
      "type" : "object"
    },
    "Principal" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "PublicKey" : {
      "type" : "object",
      "properties" : {
        "algorithm" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "encoded" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      }
    },
    "ServletConfig" : {
      "type" : "object",
      "properties" : {
        "servletContext" : {
          "$ref" : "#/definitions/ServletContext"
        },
        "initParameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletName" : {
          "type" : "string"
        }
      }
    },
    "ServletContext" : {
      "type" : "object",
      "properties" : {
        "contextPath" : {
          "type" : "string"
        },
        "attributeNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servlets" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "serverInfo" : {
          "type" : "string"
        },
        "initParameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletContextName" : {
          "type" : "string"
        },
        "majorVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minorVersion" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SewSimpleLogin" : {
      "type" : "object",
      "properties" : {
        "servletInfo" : {
          "type" : "string"
        },
        "servletContext" : {
          "$ref" : "#/definitions/ServletContext"
        },
        "initParameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletName" : {
          "type" : "string"
        },
        "servletConfig" : {
          "$ref" : "#/definitions/ServletConfig"
        }
      }
    },
    "WebCacheUser" : {
      "type" : "object",
      "properties" : {
        "disabled" : {
          "type" : "boolean"
        },
        "userId" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "principal" : {
          "$ref" : "#/definitions/Principal"
        },
        "administrator" : {
          "type" : "boolean"
        },
        "decryptedSecret" : {
          "type" : "string"
        },
        "lang" : {
          "type" : "string"
        },
        "loginName" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "tz" : {
          "type" : "string"
        },
        "mobilefone" : {
          "type" : "string"
        },
        "noEdit" : {
          "type" : "boolean"
        },
        "sfdc18Id" : {
          "type" : "string"
        },
        "tenantUserPrincipal" : {
          "$ref" : "#/definitions/Principal"
        },
        "sewsubscriptionEMail" : {
          "type" : "boolean"
        },
        "sewsubscriptionAllOpen" : {
          "type" : "boolean"
        },
        "sewsubscriptionPUSH" : {
          "type" : "boolean"
        },
        "propertyNames" : {
          "$ref" : "#/definitions/IteratorString"
        },
        "id" : {
          "type" : "string"
        }
      }
    }
  }
}